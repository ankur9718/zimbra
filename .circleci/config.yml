version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: ankur9718/zmcase2:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code in the as the first step.
      - checkout
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: ls
      # Then run your tests!
      - run:
          name: Test
          command: git clone https://github.com/ankur9718/zm-cicd.git
      - run:
         command: git checkout dev-1
      - run:
         command: echo "pipeline.git.branch" >> zmconfig
      - run:
         command: git add .
      - run:
         command: git commit -m "zmconfig file updated"
      - run:
         command: git push origin dev-1   

          
      - store_artifacts:
          path: /home/circleci/project/webapp/target/
          
      - run:
          name: deploy
          command: echo "ddeploy to dev1"
      
    

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - deploy_artifact:
          type: approval 
